{{- $functionNs := default .Release.Namespace .Values.functionNamespace }}
apiVersion: apps/v1beta1 # for versions before 1.6.0 use extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ template "openfaas.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: gateway
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: gateway
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.gateway.replicas }}
  template:
    metadata:
      labels:
        app: gateway
    spec:
      {{- if .Values.operator.create }}
      serviceAccountName: openfaas-operator
      {{- else }}
      serviceAccountName: faas-controller
      {{- end }}
      securityContext:
        readOnlyRootFilesystem: true
        runAsUser: 10001
      containers:
      - name: gateway
        image: {{ .Values.images.gateway }}
        imagePullPolicy: {{ .Values.openfaasImagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 10
          timeoutSeconds: 2
        env:
        - name: read_timeout
          value: "{{ .Values.gateway.readTimeout }}"
        - name: write_timeout
          value: "{{ .Values.gateway.writeTimeout }}"
        - name: upstream_timeout
          value: "{{ .Values.gateway.upstreamTimeout }}"
        - name: functions_provider_url
          value: "http://127.0.0.1:8081/"
        - name: direct_functions
          value: "true"
        - name: direct_functions_suffix
          value: "{{ $functionNs }}.svc.cluster.local."
        {{- if .Values.async }}
        - name: faas_nats_address
          value: "nats.{{ .Release.Namespace }}.svc.cluster.local."
        - name: faas_nats_port
          value: "4222"
        - name: direct_functions
          value: "true"
        - name: direct_functions_suffix
          value: "{{ $functionNs }}.svc.cluster.local."
        {{- end }}
        ports:
        - containerPort: 8080
          protocol: TCP
      {{- if .Values.operator.create }}
      - name: operator
        image: {{ .Values.images.operator }}
        imagePullPolicy: Always
        command:
          - ./openfaas-operator
          - -logtostderr
          - -v=2
        env:
        - name: function_namespace
          value: {{ $functionNs | quote }}
        - name: read_timeout
          value: "{{ .Values.faasnetesd.readTimeout }}"
        - name: write_timeout
          value: "{{ .Values.faasnetesd.writeTimeout }}"
        - name: image_pull_policy
          value: {{ .Values.faasnetesd.imagePullPolicy | quote }}
        ports:
        - containerPort: 8081
          protocol: TCP
      {{- else }}
      - name: faas-netesd
        image: {{ .Values.images.controller }}
        imagePullPolicy: Always
        env:
        - name: port
          value: "8081"
        - name: function_namespace
          value: {{ $functionNs | quote }}
        - name: read_timeout
          value: "{{ .Values.faasnetesd.readTimeout }}"
        - name: write_timeout
          value: "{{ .Values.faasnetesd.writeTimeout }}"
        - name: image_pull_policy
          value: {{ .Values.faasnetesd.imagePullPolicy | quote }}
        ports:
        - containerPort: 8081
          protocol: TCP
      {{- end }}
